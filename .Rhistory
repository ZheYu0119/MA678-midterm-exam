game$role <- as.factor(game$role)
game$win <- as.factor(game$win)
game <- game[-c(15,18,22),]
game$num <- as.factor(as.chatacter(rep(1:7,3)))
#import the data
game <- read.csv("game.csv",header = T)
game$partner <- as.factor(game$partner)
game$role <- as.factor(game$role)
game$win <- as.factor(game$win)
game <- game[-c(15,18,22),]
game$num <- as.factor(as.chatacter(rep(1:7,3)))
#import the data
game <- read.csv("game.csv",header = T)
game$partner <- as.factor(game$partner)
game$role <- as.factor(game$role)
game$win <- as.factor(game$win)
game <- game[-c(15,18,22),]
game$num <- as.factor(as.character(rep(1:7,3)))
#linear model
fit_g <- glm(score~partner+kill,data = game)
print(fit_g)
#linear model
fit_g <- glm(score~partner+kill+death+assist+role,data = game)
print(fit_g)
#linear model
fit_g <- glm(score~role+kill+death+assist,data = game)
print(fit_g)
#linear model
fit_g <- glm(score~partner+kill+death+assist,data = game)
print(fit_g)
ggplot(game)+
geom_point(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score-x,color=partner))+
geom_smooth(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score),method = "lm")+
geom_abline(intercept = 0,slope = 1)+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "fitted value")
ggplot(game)+
geom_point(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score-0.39*kill-0.52*death+0.29*assist+6.22,color=partner))+
geom_smooth(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score),method = "lm")+
geom_abline(intercept = 0,slope = 1)+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "fitted value")
ggplot(game)+
geom_point(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score-0.39*kill+0.52*death-0.29*assist-6.22,color=partner))+
geom_smooth(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score),method = "lm")+
geom_abline(intercept = 0,slope = 1)+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "fitted value")
ggplot(game,mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score-0.39*kill+0.52*death-0.29*assist-6.22,color=partner))+
geom_point()+
geom_smooth(method = "lm")+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "fitted value")
ggplot(game,)+
geom_point(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score-0.39*kill+0.52*death-0.29*assist-6.22,color=partner))+
geom_smooth(method = "lm")+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "fitted value")
ggplot(game)+
geom_point(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score-0.39*kill+0.52*death-0.29*assist-6.22,color=partner))+
geom_smooth(method = "lm")+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "fitted value")
ggplot(game)+
geom_point(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score-0.39*kill+0.52*death-0.29*assist-6.22,color=partner))+
geom_smooth(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score-0.39*kill+0.52*death-0.29*assist-6.22),method = "lm")+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "fitted value")
ggplot(game)+
geom_point(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score-0.39*kill+0.52*death-0.29*assist-6.22,color=partner))+
geom_smooth(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score-0.39*kill+0.52*death-0.29*assist-6.22),method = "lm")+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "fitted value",y="residual")
#linear model
fit_g <- glm(score~partner+kill+death+assist,data = game)
summary(fit_g)
#linear model
fit_g <- glm(score~partner+kill+death+assist+role,data = game)
summary(fit_g)
drop1
drop1(git_g)
drop1(fit_g)
#linear model
fit_g <- glm(score~kill+death+assist+role,data = game)
summary(fit_g)
summary(fit_g)
#linear model
drop1(fit_g)
#linear model
fit_g <- glm(score~kill+death+assist,data = game)
summary(fit_g)
#linear model
fit_g <- glm(score~kill+death+assist,data = game)
summary(fit_g)
#linear model
fit_g <- glm(score~parner+role+win+kill+death+assist,data = game)
#linear model
fit_g <- glm(score~partner+role+win+kill+death+assist,data = game)
summary(fit_g)
#linear model
fit_g <- glm(score~partner+role+win+kill+death+assist,data = game)
summary(fit_g)
drop1(fit_g)
#linear model
fit_g <- glm(score~partner+role+win+kill+death+assist,data = game)
summary(fit_g)
drop1(fit_g)
fit_h=update(fit_g,.~.-partner)
summary(fit_h)
fit_h=step(fit_h,direction="backward")
summary(fit_h)
#linear model
fit_g <- glm(score~partner+role+win+kill+death+assist,data = game)
summary(fit_g)
drop1(fit_g)
fit_h=update(fit_g,.~.-partner)
summary(fit_h)
fit_i=step(fit_h,direction="backward")
summary(fit_i)
yhat <- 0.39*game$kill-0.52*game$death+0.29*game$assist+6.23
ggplot(game)+
geom_point(mapping=aes(x=yhat,y=score,color=partner))+
geom_smooth(mapping=aes(x=yhat,y=score),method = "lm",color="red",se=F)+
geom_abline(intercept = 0,slope = 1)+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "fitted value")
#varying intercept
fit3 <- lmer(score~role+kill+death+assist+(1+role|partner),data = game)
round(coef(fit3)$partner,digits = 2)
#varying intercept and scope.
fit4 <- lmer(score~1+kill+death+assist+(1+kill+assist+death|partner),data = game)
coef(fit4)
#varying intercept
fit3 <- lmer(score~kill+death+assist+(1+role|partner),data = game)
round(coef(fit3)$partner,digits = 2)
#varying intercept
fit3 <- lmer(score~kill+death+assist+(1+|partner),data = game)
#varying intercept
fit3 <- lmer(score~kill+death+assist+(1+|partner),data = game)
#varying intercept
fit3 <- lmer(score~kill+death+assist+(1|partner),data = game)
round(coef(fit3)$partner,digits = 2)
#varying intercept
fit3 <- lmer(score~kill+death+assist+(1|role),data = game)
round(coef(fit3)$partner,digits = 2)
#varying intercept
fit3 <- lmer(score~kill+death+assist+(1|role),data = game)
round(coef(fit3)$partner,digits = 2)
#varying intercept
fit3 <- lmer(score~kill+death+assist+(1|role),data = game)
round(coef(fit3)$role,digits = 2)
#varying intercept
fit2 <- lmer(score~kill+death+assist+(1|partner),data = game)
round(coef(fit3)$role,digits = 2)
fit3 <- lmer(score~kill+death+assist+(1|role),data = game)
round(coef(fit3)$role,digits = 2)
#varying intercept
fit2 <- lmer(score~kill+death+assist+(1|partner),data = game)
round(coef(fit2)$partner,digits = 2)
fit3 <- lmer(score~kill+death+assist+(1|role),data = game)
round(coef(fit3)$role,digits = 2)
#varying intercept and scope.
fit4 <- lmer(score~kill+death+assist+(1+role|partner),data = game)
coef(fit4)
#complete pooling
fit_g <- glm(score~partner+role+win+kill+death+assist,data = game)
summary(fit_g)
drop1(fit_g)
fit_h=update(fit_g,.~.-partner)
summary(fit_h)
fit_i=step(fit_h,direction="backward")
summary(fit_i)
#complete pooling
fit_g <- glm(score~partner+role+win+kill+death+assist,data = game)
summary(fit_g)
fit_h=step(fit_g,direction="backward")
summary(fit_h)
fit_i=
summary(fit_i)
#complete pooling
fit_g <- glm(score~partner+role+win+kill+death+assist,data = game)
summary(fit_g)
fit_h=step(fit_g,direction="backward")
summary(fit_h)
fit_i=step(fit_h,direction="backward")
summary(fit_i)
#complete pooling
fit_g <- glm(score~partner+role+win+kill+death+assist,data = game)
summary(fit_g)
fit_h=step(fit_g,direction="backward")
summary(fit_h)
ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
ggplot(game,mapping=aes(x=partner,y=role))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different role",x = "partner")
ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different role",x = "partner")
ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
multicomp.plot(p1,p2,p3)
p1 <- ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
p2 <- ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different role",x = "partner")
p3 <- ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
multicomp.plot(p1,p2,p3)
p1 <- ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
p2 <- ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different role",x = "partner")
p3 <- ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
multiplot(p1,p2,p3)
p1 <- ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
p2 <- ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different role",x = "partner")
p3 <- ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
grid.arrange(p1,p2,p3)
p1 <- ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
p2 <- ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different role",x = "partner")
p3 <- ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
grid.arrange(p1,p2,p3,ncol=2)
p1 <- ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
p2 <- ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different role",x = "partner")
p3 <- ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
grid.arrange(p1,p2,p3,ncol=3)
p1 <- ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
p2 <- ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different role",x = "partner")
p3 <- ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
grid.arrange(p1,p2,p3,ncol=3)
p1 <- ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
p2 <- ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different role",x = "partner")
p3 <- ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
grid.arrange(p1,p2,p3,ncol=3)
p1 <- ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
p2 <- ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different role",x = "partner")
p3 <- ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
grid.arrange(p1,p2,p3,ncol=3)
p4 <- ggplot(game,mapping=aes(x=kill,y=score))+geom_point()+
geom_smooth(method = "lm")
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
grid.arrange(p1,p2,p3,ncol=3)
p1 <- ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "partner")
p2 <- ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different role",x = "partner")
p3 <- ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
p4 <- ggplot(game,mapping=aes(x=kill,y=score))+geom_point()+
geom_smooth(method = "lm")
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
p5 <- ggplot(game,mapping=aes(x=death,y=score))+geom_point()+
geom_smooth(method = "lm")
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
p6 <- ggplot(game,mapping=aes(x=assist,y=score))+geom_point()+
geom_smooth(method = "lm")
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different win",x = "partner")
grid.arrange(p1,p2,p3,p4,p5,p6,ncol=3)
p1 <- ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13)) +
p2 <- ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 13)) +
p3 <- ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13)) +
p4 <- ggplot(game,mapping=aes(x=kill,y=score))+geom_point()+
geom_smooth(method = "lm")
p1 <- ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13))
p2 <- ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 13))
p3 <- ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13))
p4 <- ggplot(game,mapping=aes(x=kill,y=score))+geom_point()+
geom_smooth(method = "lm")
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13))
p5 <- ggplot(game,mapping=aes(x=death,y=score))+geom_point()+
geom_smooth(method = "lm")
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13))
p6 <- ggplot(game,mapping=aes(x=assist,y=score))+geom_point()+
geom_smooth(method = "lm")
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13))
grid.arrange(p1,p2,p3,p4,p5,p6,ncol=3)
#varying intercept
fit2 <- lmer(score~kill+death+assist+(1|partner),data = game)
round(coef(fit2)$partner,digits = 2)
fit3 <- lmer(score~kill+death+assist+(1|role),data = game)
round(coef(fit3)$role,digits = 2)
#varying intercept and scope.
fit4 <- lmer(score~kill+death+assist+(1+role|partner),data = game)
coef(fit4)
#varying intercept
fit2 <- lmer(score~kill+death+assist+(1|partner),data = game)
round(coef(fit2)$partner,digits = 2)
fit3 <- lmer(score~kill+death+assist+(1|role),data = game)
round(coef(fit3)$role,digits = 2)
fit5 <- lmer(score~kill+death+assist+(1|win),data = game)
round(coef(fit5)$role,digits = 2)
#varying intercept
fit2 <- lmer(score~kill+death+assist+(1|partner),data = game)
round(coef(fit2)$partner,digits = 2)
fit3 <- lmer(score~kill+death+assist+(1|role),data = game)
round(coef(fit3)$role,digits = 2)
fit5 <- lmer(score~kill+death+assist+(1|win),data = game)
round(coef(fit5)$win,digits = 2)
#varying intercept and scope.
fit4 <- lmer(score~kill+death+assist+(1+role|partner),data = game)
coef(fit4)
fit6 <- lmer(score~kill+death+assist+(1+partner|role),data = game)
coef(fit4)
#varying intercept and scope.
fit4 <- lmer(score~kill+death+assist+(1+role|partner),data = game)
coef(fit4)
fit6 <- lmer(score~kill+death+assist+(1+win|partner),data = game)
coef(fit4)
ggplot(game)+
geom_point(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score-0.39*kill+0.52*death-0.29*assist-6.22,color=partner))+
geom_smooth(mapping=aes(x=0.39*kill-0.52*death+0.29*assist+6.22,y=score-0.39*kill+0.52*death-0.29*assist-6.22),method = "lm")+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(x = "fitted value",y="residual")
yhat <- 0.39*game$kill-0.52*game$death+0.29*game$assist+6.23
ggplot(game)+
geom_point(mapping=aes(x=yhat,y=score,color=partner))+
geom_smooth(mapping=aes(x=yhat,y=score),method = "lm",color="red",se=F)+
geom_abline(intercept = 0,slope = 1)+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "score distribution with different partner",x = "fitted value")
round(coef(fit_h))
round(coef(fit_h),digits = 2)
yhat <- 0.39*game$kill-0.52*game$death+0.29*game$assist+6.23
ggplot(game)+
geom_point(mapping=aes(x=yhat,y=score,color=partner))+
geom_smooth(mapping=aes(x=yhat,y=score),method = "lm",color="red",se=F)+
geom_abline(intercept = 0,slope = 1)+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(title = "fitted value vs real value",x = "fitted value")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(
ggplot2,
knitr,
arm,
data.table,
foreign,
gridExtra,
car,
stringr,
rstan,
rstanarm,
zoo,
tidyverse,
pwr
)
p1 <- ggplot(game,mapping=aes(x=partner,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13))
p2 <- ggplot(game,mapping=aes(x=role,y=score))+geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 13))
p3 <- ggplot(game,mapping=aes(x=win,y=score))+geom_boxplot()+
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13))
p4 <- ggplot(game,mapping=aes(x=kill,y=score))+geom_point()+
geom_smooth(method = "lm")
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13))
p5 <- ggplot(game,mapping=aes(x=death,y=score))+geom_point()+
geom_smooth(method = "lm")
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13))
p6 <- ggplot(game,mapping=aes(x=assist,y=score))+geom_point()+
geom_smooth(method = "lm")
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 13))
grid.arrange(p1,p2,p3,p4,p5,p6,ncol=3)
